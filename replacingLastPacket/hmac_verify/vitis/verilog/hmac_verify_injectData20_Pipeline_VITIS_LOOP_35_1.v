// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hmac_verify_injectData20_Pipeline_VITIS_LOOP_35_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        len_strm2_din,
        len_strm2_num_data_valid,
        len_strm2_fifo_cap,
        len_strm2_full_n,
        len_strm2_write,
        msg_key_strm1_din,
        msg_key_strm1_num_data_valid,
        msg_key_strm1_fifo_cap,
        msg_key_strm1_full_n,
        msg_key_strm1_write,
        input_r_TVALID,
        tmp_tdata_V,
        input_r_TDATA,
        input_r_TREADY,
        last_input,
        last_input_ap_vld,
        p_Result_13_out,
        p_Result_13_out_ap_vld,
        id_copy_1_out,
        id_copy_1_out_ap_vld,
        keep_copy_1_out,
        keep_copy_1_out_ap_vld,
        lenWord_V_out,
        lenWord_V_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [39:0] len_strm2_din;
input  [5:0] len_strm2_num_data_valid;
input  [5:0] len_strm2_fifo_cap;
input   len_strm2_full_n;
output   len_strm2_write;
output  [511:0] msg_key_strm1_din;
input  [5:0] msg_key_strm1_num_data_valid;
input  [5:0] msg_key_strm1_fifo_cap;
input   msg_key_strm1_full_n;
output   msg_key_strm1_write;
input   input_r_TVALID;
input  [511:0] tmp_tdata_V;
input  [583:0] input_r_TDATA;
output   input_r_TREADY;
output  [511:0] last_input;
output   last_input_ap_vld;
output  [511:0] p_Result_13_out;
output   p_Result_13_out_ap_vld;
output  [5:0] id_copy_1_out;
output   id_copy_1_out_ap_vld;
output  [63:0] keep_copy_1_out;
output   keep_copy_1_out_ap_vld;
output  [38:0] lenWord_V_out;
output   lenWord_V_out_ap_vld;

reg ap_idle;
reg len_strm2_write;
reg msg_key_strm1_write;
reg input_r_TREADY;
reg last_input_ap_vld;
reg p_Result_13_out_ap_vld;
reg id_copy_1_out_ap_vld;
reg keep_copy_1_out_ap_vld;
reg lenWord_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] last_V_fu_295_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    len_strm2_blk_n;
wire    ap_block_pp0_stage0;
reg    msg_key_strm1_blk_n;
reg    input_r_TDATA_blk_n;
reg   [38:0] lenWord_V_reg_191;
reg   [38:0] ap_phi_mux_lenWord_V_phi_fu_194_p4;
wire   [38:0] ap_phi_reg_pp0_iter1_lenWord_V_reg_191;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] p_Val2_s_fu_110;
wire   [511:0] p_Result_15_fu_271_p3;
wire    ap_loop_init;
reg   [38:0] p_Val2_22_fu_114;
reg   [511:0] p_Val2_23_fu_118;
wire   [511:0] bbb_V_fu_280_p1;
reg   [63:0] keep_copy_0_fu_122;
reg   [5:0] id_copy_0_fu_126;
reg    ap_block_pp0_stage0_01001;
wire   [39:0] lenWord_V_3_cast_fu_227_p1;
wire   [127:0] trunc_ln674_fu_244_p1;
wire   [383:0] tmp_s_fu_261_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_97;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

hmac_verify_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_97)) begin
        if ((last_V_fu_295_p3 == 1'd0)) begin
            lenWord_V_reg_191 <= 39'd283744936200;
        end else if ((last_V_fu_295_p3 == 1'd1)) begin
            lenWord_V_reg_191 <= 39'd284281807112;
        end else if (~(last_V_fu_295_p3 == 1'd1)) begin
            lenWord_V_reg_191 <= ap_phi_reg_pp0_iter1_lenWord_V_reg_191;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_22_fu_114 <= 39'd17993834760;
        end else if (((last_V_fu_295_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_22_fu_114 <= ap_phi_mux_lenWord_V_phi_fu_194_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_23_fu_118 <= tmp_tdata_V;
        end else if (((last_V_fu_295_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_23_fu_118 <= bbb_V_fu_280_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_110 <= 512'd7417454176856052595732528208455057933732391674849899234074968927796770744934402596314045918309813378249885381637687;
        end else if (((last_V_fu_295_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_s_fu_110 <= p_Result_15_fu_271_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        id_copy_0_fu_126 <= {{input_r_TDATA[581:576]}};
        keep_copy_0_fu_122 <= {{input_r_TDATA[575:512]}};
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((last_V_fu_295_p3 == 1'd0)) begin
        ap_phi_mux_lenWord_V_phi_fu_194_p4 = 39'd283744936200;
    end else if ((last_V_fu_295_p3 == 1'd1)) begin
        ap_phi_mux_lenWord_V_phi_fu_194_p4 = 39'd284281807112;
    end else begin
        ap_phi_mux_lenWord_V_phi_fu_194_p4 = ap_phi_reg_pp0_iter1_lenWord_V_reg_191;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        id_copy_1_out_ap_vld = 1'b1;
    end else begin
        id_copy_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TDATA_blk_n = input_r_TVALID;
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_TREADY = 1'b1;
    end else begin
        input_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        keep_copy_1_out_ap_vld = 1'b1;
    end else begin
        keep_copy_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        last_input_ap_vld = 1'b1;
    end else begin
        last_input_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lenWord_V_out_ap_vld = 1'b1;
    end else begin
        lenWord_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        len_strm2_blk_n = len_strm2_full_n;
    end else begin
        len_strm2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        len_strm2_write = 1'b1;
    end else begin
        len_strm2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        msg_key_strm1_blk_n = msg_key_strm1_full_n;
    end else begin
        msg_key_strm1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        msg_key_strm1_write = 1'b1;
    end else begin
        msg_key_strm1_write = 1'b0;
    end
end

always @ (*) begin
    if (((last_V_fu_295_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_13_out_ap_vld = 1'b1;
    end else begin
        p_Result_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((input_r_TVALID == 1'b0) | (msg_key_strm1_full_n == 1'b0) | (len_strm2_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((input_r_TVALID == 1'b0) | (msg_key_strm1_full_n == 1'b0) | (len_strm2_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((input_r_TVALID == 1'b0) | (msg_key_strm1_full_n == 1'b0) | (len_strm2_full_n == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((input_r_TVALID == 1'b0) | (msg_key_strm1_full_n == 1'b0) | (len_strm2_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_97 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter1_lenWord_V_reg_191 = 'bx;

assign bbb_V_fu_280_p1 = input_r_TDATA[511:0];

assign id_copy_1_out = id_copy_0_fu_126;

assign keep_copy_1_out = keep_copy_0_fu_122;

assign last_V_fu_295_p3 = input_r_TDATA[32'd582];

assign last_input = input_r_TDATA[511:0];

assign lenWord_V_3_cast_fu_227_p1 = p_Val2_22_fu_114;

assign lenWord_V_out = lenWord_V_reg_191;

assign len_strm2_din = {{10'd264}, {lenWord_V_3_cast_fu_227_p1[29:0]}};

assign msg_key_strm1_din = {{trunc_ln674_fu_244_p1}, {p_Val2_s_fu_110[383:0]}};

assign p_Result_13_out = {{trunc_ln674_fu_244_p1}, {tmp_s_fu_261_p4}};

assign p_Result_15_fu_271_p3 = {{trunc_ln674_fu_244_p1}, {tmp_s_fu_261_p4}};

assign tmp_s_fu_261_p4 = {{p_Val2_23_fu_118[511:128]}};

assign trunc_ln674_fu_244_p1 = p_Val2_23_fu_118[127:0];

endmodule //hmac_verify_injectData20_Pipeline_VITIS_LOOP_35_1
