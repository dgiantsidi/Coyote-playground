

================================================================
== Vitis HLS Report for 'sha256_Pipeline_VITIS_LOOP_89_3'
================================================================
* Date:           Thu Jul 27 01:32:42 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        shat
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.720 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       66|       66|  0.660 us|  0.660 us|   66|   66|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_89_3  |       64|       64|         2|          1|          1|    64|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.09>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_Val2_s = alloca i32 1"   --->   Operation 5 'alloca' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.38ns)   --->   "%store_ln0 = store i7 0, i7 %i"   --->   Operation 7 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 8 [1/1] (0.38ns)   --->   "%store_ln0 = store i512 0, i512 %p_Val2_s"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc38"   --->   Operation 9 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%i_7 = load i7 %i" [sha256.cpp:90]   --->   Operation 10 'load' 'i_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 11 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.59ns)   --->   "%icmp_ln89 = icmp_eq  i7 %i_7, i7 64" [sha256.cpp:89]   --->   Operation 12 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 13 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.70ns)   --->   "%i_8 = add i7 %i_7, i7 1" [sha256.cpp:90]   --->   Operation 14 'add' 'i_8' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln89 = br i1 %icmp_ln89, void %for.inc38.split, void %for.cond.cleanup26.exitStub" [sha256.cpp:89]   --->   Operation 15 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_8_cast = zext i7 %i_7" [sha256.cpp:90]   --->   Operation 16 'zext' 'i_8_cast' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%signature_addr = getelementptr i8 %signature, i64 0, i64 %i_8_cast" [sha256.cpp:90]   --->   Operation 17 'getelementptr' 'signature_addr' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (0.66ns)   --->   "%p_Repl2_s = load i6 %signature_addr" [sha256.cpp:90]   --->   Operation 18 'load' 'p_Repl2_s' <Predicate = (!icmp_ln89)> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i7 %i_7" [sha256.cpp:90]   --->   Operation 19 'trunc' 'trunc_ln90' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.38ns)   --->   "%store_ln89 = store i7 %i_8, i7 %i" [sha256.cpp:89]   --->   Operation 20 'store' 'store_ln89' <Predicate = (!icmp_ln89)> <Delay = 0.38>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%p_Val2_load = load i512 %p_Val2_s"   --->   Operation 52 'load' 'p_Val2_load' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i512P0A, i512 %p_Val2_1_out, i512 %p_Val2_load"   --->   Operation 53 'write' 'write_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 54 'ret' 'ret_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.71>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%p_Val2_load_1 = load i512 %p_Val2_s"   --->   Operation 21 'load' 'p_Val2_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln89 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [sha256.cpp:89]   --->   Operation 22 'specloopname' 'specloopname_ln89' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/2] (0.66ns)   --->   "%p_Repl2_s = load i6 %signature_addr" [sha256.cpp:90]   --->   Operation 23 'load' 'p_Repl2_s' <Predicate = true> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 24 [1/1] (0.70ns)   --->   "%add_ln90_1 = add i6 %trunc_ln90, i6 1" [sha256.cpp:90]   --->   Operation 24 'add' 'add_ln90_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%shl_ln90_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i6.i3, i6 %add_ln90_1, i3 0" [sha256.cpp:90]   --->   Operation 25 'bitconcatenate' 'shl_ln90_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.71ns)   --->   "%add_ln90_2 = add i9 %shl_ln90_1, i9 511" [sha256.cpp:90]   --->   Operation 26 'add' 'add_ln90_2' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i6.i3, i6 %trunc_ln90, i3 0" [sha256.cpp:90]   --->   Operation 27 'bitconcatenate' 'shl_ln3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node shl_ln388)   --->   "%zext_ln257 = zext i8 %p_Repl2_s"   --->   Operation 28 'zext' 'zext_ln257' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.59ns)   --->   "%icmp_ln388 = icmp_ugt  i9 %shl_ln3, i9 %add_ln90_2"   --->   Operation 29 'icmp' 'icmp_ln388' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln388 = zext i9 %shl_ln3"   --->   Operation 30 'zext' 'zext_ln388' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln388_1 = zext i9 %add_ln90_2"   --->   Operation 31 'zext' 'zext_ln388_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node shl_ln388)   --->   "%xor_ln388 = xor i10 %zext_ln388, i10 511"   --->   Operation 32 'xor' 'xor_ln388' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%select_ln388 = select i1 %icmp_ln388, i10 %zext_ln388, i10 %zext_ln388_1"   --->   Operation 33 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%select_ln388_1 = select i1 %icmp_ln388, i10 %zext_ln388_1, i10 %zext_ln388"   --->   Operation 34 'select' 'select_ln388_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node shl_ln388)   --->   "%select_ln388_2 = select i1 %icmp_ln388, i10 %xor_ln388, i10 %zext_ln388"   --->   Operation 35 'select' 'select_ln388_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%xor_ln388_1 = xor i10 %select_ln388, i10 511"   --->   Operation 36 'xor' 'xor_ln388_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node shl_ln388)   --->   "%zext_ln388_2 = zext i10 %select_ln388_2"   --->   Operation 37 'zext' 'zext_ln388_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%zext_ln388_3 = zext i10 %select_ln388_1"   --->   Operation 38 'zext' 'zext_ln388_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%zext_ln388_4 = zext i10 %xor_ln388_1"   --->   Operation 39 'zext' 'zext_ln388_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.74ns) (out node of the LUT)   --->   "%shl_ln388 = shl i512 %zext_ln257, i512 %zext_ln388_2"   --->   Operation 40 'shl' 'shl_ln388' <Predicate = true> <Delay = 0.74> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp = partselect i512 @llvm.part.select.i512, i512 %shl_ln388, i32 511, i32 0"   --->   Operation 41 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%select_ln388_3 = select i1 %icmp_ln388, i512 %tmp, i512 %shl_ln388"   --->   Operation 42 'select' 'select_ln388_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%shl_ln388_1 = shl i512 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095, i512 %zext_ln388_3"   --->   Operation 43 'shl' 'shl_ln388_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node and_ln388)   --->   "%lshr_ln388 = lshr i512 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095, i512 %zext_ln388_4"   --->   Operation 44 'lshr' 'lshr_ln388' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.74ns) (out node of the LUT)   --->   "%and_ln388 = and i512 %shl_ln388_1, i512 %lshr_ln388"   --->   Operation 45 'and' 'and_ln388' <Predicate = true> <Delay = 0.74> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%xor_ln388_2 = xor i512 %and_ln388, i512 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095"   --->   Operation 46 'xor' 'xor_ln388_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%and_ln388_1 = and i512 %p_Val2_load_1, i512 %xor_ln388_2"   --->   Operation 47 'and' 'and_ln388_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%and_ln388_2 = and i512 %select_ln388_3, i512 %and_ln388"   --->   Operation 48 'and' 'and_ln388_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.57ns) (out node of the LUT)   --->   "%p_Result_s = or i512 %and_ln388_1, i512 %and_ln388_2"   --->   Operation 49 'or' 'p_Result_s' <Predicate = true> <Delay = 0.57> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.38ns)   --->   "%store_ln89 = store i512 %p_Result_s, i512 %p_Val2_s" [sha256.cpp:89]   --->   Operation 50 'store' 'store_ln89' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln89 = br void %for.inc38" [sha256.cpp:89]   --->   Operation 51 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.09ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0 ns)
	'load' operation ('i', sha256.cpp:90) on local variable 'i' [9]  (0 ns)
	'add' operation ('i', sha256.cpp:90) [13]  (0.706 ns)
	'store' operation ('store_ln89', sha256.cpp:89) of variable 'i', sha256.cpp:90 on local variable 'i' [48]  (0.387 ns)

 <State 2>: 3.72ns
The critical path consists of the following:
	'add' operation ('add_ln90_1', sha256.cpp:90) [22]  (0.706 ns)
	'add' operation ('add_ln90_2', sha256.cpp:90) [24]  (0.715 ns)
	'icmp' operation ('icmp_ln388') [27]  (0.593 ns)
	'select' operation ('select_ln388') [31]  (0 ns)
	'xor' operation ('xor_ln388_1') [34]  (0 ns)
	'lshr' operation ('lshr_ln388') [42]  (0 ns)
	'and' operation ('and_ln388') [43]  (0.74 ns)
	'and' operation ('and_ln388_2') [46]  (0 ns)
	'or' operation ('__Result__') [47]  (0.578 ns)
	'store' operation ('store_ln89', sha256.cpp:89) of variable '__Result__' on local variable '__Val2__' [49]  (0.387 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
