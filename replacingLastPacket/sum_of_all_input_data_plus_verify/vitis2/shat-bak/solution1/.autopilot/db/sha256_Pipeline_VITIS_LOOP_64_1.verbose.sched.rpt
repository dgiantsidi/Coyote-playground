

================================================================
== Vitis HLS Report for 'sha256_Pipeline_VITIS_LOOP_64_1'
================================================================
* Date:           Thu Jul 27 01:32:41 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        shat
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.844 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       34|       34|  0.340 us|  0.340 us|   34|   34|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_64_1  |       32|       32|         1|          1|          1|    32|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.84>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 4 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%hash_tdata_V_read = read i512 @_ssdm_op_Read.ap_auto.i512, i512 %hash_tdata_V"   --->   Operation 5 'read' 'hash_tdata_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.38ns)   --->   "%store_ln0 = store i6 0, i6 %i"   --->   Operation 6 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 7 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i_9 = load i6 %i" [sha256.cpp:65]   --->   Operation 8 'load' 'i_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 9 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.61ns)   --->   "%icmp_ln64 = icmp_eq  i6 %i_9, i6 32" [sha256.cpp:64]   --->   Operation 10 'icmp' 'icmp_ln64' <Predicate = true> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.70ns)   --->   "%i_10 = add i6 %i_9, i6 1" [sha256.cpp:65]   --->   Operation 12 'add' 'i_10' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln64 = br i1 %icmp_ln64, void %for.inc.split, void %for.inc38.preheader.exitStub" [sha256.cpp:64]   --->   Operation 13 'br' 'br_ln64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%i_cast = zext i6 %i_9" [sha256.cpp:65]   --->   Operation 14 'zext' 'i_cast' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specloopname_ln64 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [sha256.cpp:64]   --->   Operation 15 'specloopname' 'specloopname_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i6 %i_9" [sha256.cpp:65]   --->   Operation 16 'trunc' 'trunc_ln65' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.70ns)   --->   "%add_ln65_2 = add i5 %trunc_ln65, i5 1" [sha256.cpp:65]   --->   Operation 17 'add' 'add_ln65_2' <Predicate = (!icmp_ln64)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%shl_ln65_1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %add_ln65_2, i3 0" [sha256.cpp:65]   --->   Operation 18 'bitconcatenate' 'shl_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.70ns)   --->   "%add_ln65_3 = add i8 %shl_ln65_1, i8 255" [sha256.cpp:65]   --->   Operation 19 'add' 'add_ln65_3' <Predicate = (!icmp_ln64)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %trunc_ln65, i3 0" [sha256.cpp:65]   --->   Operation 20 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.58ns)   --->   "%icmp_ln714 = icmp_ugt  i8 %shl_ln, i8 %add_ln65_3"   --->   Operation 21 'icmp' 'icmp_ln714' <Predicate = (!icmp_ln64)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln714 = zext i8 %shl_ln"   --->   Operation 22 'zext' 'zext_ln714' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln714_1 = zext i8 %add_ln65_3"   --->   Operation 23 'zext' 'zext_ln714_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln714)   --->   "%tmp = partselect i512 @llvm.part.select.i512, i512 %hash_tdata_V_read, i32 511, i32 0"   --->   Operation 24 'partselect' 'tmp' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.70ns)   --->   "%sub_ln714 = sub i10 %zext_ln714, i10 %zext_ln714_1"   --->   Operation 25 'sub' 'sub_ln714' <Predicate = (!icmp_ln64)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln714)   --->   "%xor_ln714 = xor i10 %zext_ln714, i10 511"   --->   Operation 26 'xor' 'xor_ln714' <Predicate = (!icmp_ln64)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.70ns)   --->   "%sub_ln714_1 = sub i10 %zext_ln714_1, i10 %zext_ln714"   --->   Operation 27 'sub' 'sub_ln714_1' <Predicate = (!icmp_ln64)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node sub_ln714_2)   --->   "%select_ln714 = select i1 %icmp_ln714, i10 %sub_ln714, i10 %sub_ln714_1"   --->   Operation 28 'select' 'select_ln714' <Predicate = (!icmp_ln64)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln714)   --->   "%select_ln714_1 = select i1 %icmp_ln714, i512 %tmp, i512 %hash_tdata_V_read"   --->   Operation 29 'select' 'select_ln714_1' <Predicate = (!icmp_ln64)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln714)   --->   "%select_ln714_2 = select i1 %icmp_ln714, i10 %xor_ln714, i10 %zext_ln714"   --->   Operation 30 'select' 'select_ln714_2' <Predicate = (!icmp_ln64)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.72ns) (out node of the LUT)   --->   "%sub_ln714_2 = sub i10 511, i10 %select_ln714"   --->   Operation 31 'sub' 'sub_ln714_2' <Predicate = (!icmp_ln64)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln714)   --->   "%zext_ln714_2 = zext i10 %select_ln714_2"   --->   Operation 32 'zext' 'zext_ln714_2' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%zext_ln714_3 = zext i10 %sub_ln714_2"   --->   Operation 33 'zext' 'zext_ln714_3' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.44ns) (out node of the LUT)   --->   "%lshr_ln714 = lshr i512 %select_ln714_1, i512 %zext_ln714_2"   --->   Operation 34 'lshr' 'lshr_ln714' <Predicate = (!icmp_ln64)> <Delay = 1.44> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%lshr_ln714_1 = lshr i512 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095, i512 %zext_ln714_3"   --->   Operation 35 'lshr' 'lshr_ln714_1' <Predicate = (!icmp_ln64)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.74ns) (out node of the LUT)   --->   "%p_Result_s = and i512 %lshr_ln714, i512 %lshr_ln714_1"   --->   Operation 36 'and' 'p_Result_s' <Predicate = (!icmp_ln64)> <Delay = 0.74> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i512 %p_Result_s" [sha256.cpp:65]   --->   Operation 37 'trunc' 'trunc_ln65_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%signature_addr = getelementptr i8 %signature, i64 0, i64 %i_cast" [sha256.cpp:65]   --->   Operation 38 'getelementptr' 'signature_addr' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.66ns)   --->   "%store_ln65 = store i8 %trunc_ln65_1, i6 %signature_addr" [sha256.cpp:65]   --->   Operation 39 'store' 'store_ln65' <Predicate = (!icmp_ln64)> <Delay = 0.66> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 40 [1/1] (0.38ns)   --->   "%store_ln64 = store i6 %i_10, i6 %i" [sha256.cpp:64]   --->   Operation 40 'store' 'store_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.38>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln64 = br void %for.inc" [sha256.cpp:64]   --->   Operation 41 'br' 'br_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 42 'ret' 'ret_ln0' <Predicate = (icmp_ln64)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.84ns
The critical path consists of the following:
	'alloca' operation ('i') [3]  (0 ns)
	'load' operation ('i', sha256.cpp:65) on local variable 'i' [8]  (0 ns)
	'add' operation ('add_ln65_2', sha256.cpp:65) [18]  (0.707 ns)
	'add' operation ('add_ln65_3', sha256.cpp:65) [20]  (0.705 ns)
	'icmp' operation ('icmp_ln714') [22]  (0.581 ns)
	'select' operation ('select_ln714_1') [30]  (0 ns)
	'lshr' operation ('lshr_ln714') [35]  (1.44 ns)
	'and' operation ('__Result__') [37]  (0.74 ns)
	'store' operation ('store_ln65', sha256.cpp:65) of variable 'trunc_ln65_1', sha256.cpp:65 on array 'signature' [40]  (0.667 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
