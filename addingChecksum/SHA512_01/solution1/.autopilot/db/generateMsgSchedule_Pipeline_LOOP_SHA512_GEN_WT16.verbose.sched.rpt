

================================================================
== Vitis HLS Report for 'generateMsgSchedule_Pipeline_LOOP_SHA512_GEN_WT16'
================================================================
* Date:           Thu Aug  3 15:02:49 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        SHA512_01
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  1.094 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       18|       18|  72.000 ns|  72.000 ns|   18|   18|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_SHA512_GEN_WT16  |       16|       16|         2|          1|          1|    16|       yes|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.09>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%t_V = alloca i32 1"   --->   Operation 5 'alloca' 't_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%W_V = alloca i32 1"   --->   Operation 6 'alloca' 'W_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%W_V_1 = alloca i32 1"   --->   Operation 7 'alloca' 'W_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%W_V_2 = alloca i32 1"   --->   Operation 8 'alloca' 'W_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%W_V_3 = alloca i32 1"   --->   Operation 9 'alloca' 'W_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%W_V_4 = alloca i32 1"   --->   Operation 10 'alloca' 'W_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%W_V_5 = alloca i32 1"   --->   Operation 11 'alloca' 'W_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%W_V_6 = alloca i32 1"   --->   Operation 12 'alloca' 'W_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%W_V_7 = alloca i32 1"   --->   Operation 13 'alloca' 'W_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%W_V_8 = alloca i32 1"   --->   Operation 14 'alloca' 'W_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%W_V_9 = alloca i32 1"   --->   Operation 15 'alloca' 'W_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%W_V_10 = alloca i32 1"   --->   Operation 16 'alloca' 'W_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%W_V_11 = alloca i32 1"   --->   Operation 17 'alloca' 'W_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%W_V_12 = alloca i32 1"   --->   Operation 18 'alloca' 'W_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%W_V_13 = alloca i32 1"   --->   Operation 19 'alloca' 'W_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%W_V_14 = alloca i32 1"   --->   Operation 20 'alloca' 'W_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%W_V_15 = alloca i32 1"   --->   Operation 21 'alloca' 'W_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i64 %w_strm34, i64 666, i64 9, i64 18446744073709551615"   --->   Operation 22 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %w_strm34, void @empty_1, i32 0, i32 0, void @empty_6, i32 0, i32 0, void @empty_6, void @empty_6, void @empty_6, i32 0, i32 0, i32 0, i32 0, void @empty_6, void @empty_6, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%blk_M_V_15_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_15" [SHA512CODE/sha512.cpp:490]   --->   Operation 24 'read' 'blk_M_V_15_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%blk_M_V_14_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_14" [SHA512CODE/sha512.cpp:490]   --->   Operation 25 'read' 'blk_M_V_14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%blk_M_V_13_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_13" [SHA512CODE/sha512.cpp:490]   --->   Operation 26 'read' 'blk_M_V_13_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%blk_M_V_12_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_12" [SHA512CODE/sha512.cpp:490]   --->   Operation 27 'read' 'blk_M_V_12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%blk_M_V_11_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_11" [SHA512CODE/sha512.cpp:490]   --->   Operation 28 'read' 'blk_M_V_11_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%blk_M_V_10_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_10" [SHA512CODE/sha512.cpp:490]   --->   Operation 29 'read' 'blk_M_V_10_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%blk_M_V_9_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_9" [SHA512CODE/sha512.cpp:490]   --->   Operation 30 'read' 'blk_M_V_9_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%blk_M_V_8_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_8" [SHA512CODE/sha512.cpp:490]   --->   Operation 31 'read' 'blk_M_V_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%blk_M_V_7_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_7" [SHA512CODE/sha512.cpp:490]   --->   Operation 32 'read' 'blk_M_V_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%blk_M_V_6_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_6" [SHA512CODE/sha512.cpp:490]   --->   Operation 33 'read' 'blk_M_V_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%blk_M_V_5_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_5" [SHA512CODE/sha512.cpp:490]   --->   Operation 34 'read' 'blk_M_V_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%blk_M_V_4_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_4" [SHA512CODE/sha512.cpp:490]   --->   Operation 35 'read' 'blk_M_V_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%blk_M_V_3_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_3" [SHA512CODE/sha512.cpp:490]   --->   Operation 36 'read' 'blk_M_V_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%blk_M_V_2_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_2" [SHA512CODE/sha512.cpp:490]   --->   Operation 37 'read' 'blk_M_V_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%blk_M_V_1_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V_1" [SHA512CODE/sha512.cpp:490]   --->   Operation 38 'read' 'blk_M_V_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%blk_M_V_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %blk_M_V" [SHA512CODE/sha512.cpp:490]   --->   Operation 39 'read' 'blk_M_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.38ns)   --->   "%store_ln0 = store i5 0, i5 %t_V"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 41 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%t_V_1 = load i5 %t_V" [SHA512CODE/sha512.cpp:511]   --->   Operation 42 'load' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.63ns)   --->   "%icmp_ln1073 = icmp_eq  i5 %t_V_1, i5 16"   --->   Operation 43 'icmp' 'icmp_ln1073' <Predicate = true> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 44 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.70ns)   --->   "%add_ln886 = add i5 %t_V_1, i5 1"   --->   Operation 45 'add' 'add_ln886' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln508 = br i1 %icmp_ln1073, void %for.inc.split, void %for.inc32.preheader.exitStub" [SHA512CODE/sha512.cpp:508]   --->   Operation 46 'br' 'br_ln508' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specpipeline_ln509 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_6" [SHA512CODE/sha512.cpp:509]   --->   Operation 47 'specpipeline' 'specpipeline_ln509' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln504 = specloopname void @_ssdm_op_SpecLoopName, void @empty_11" [SHA512CODE/sha512.cpp:504]   --->   Operation 48 'specloopname' 'specloopname_ln504' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.49ns)   --->   "%W_V_16 = mux i64 @_ssdm_op_Mux.ap_auto.16i64.i5, i64 %blk_M_V_read, i64 %blk_M_V_1_read, i64 %blk_M_V_2_read, i64 %blk_M_V_3_read, i64 %blk_M_V_4_read, i64 %blk_M_V_5_read, i64 %blk_M_V_6_read, i64 %blk_M_V_7_read, i64 %blk_M_V_8_read, i64 %blk_M_V_9_read, i64 %blk_M_V_10_read, i64 %blk_M_V_11_read, i64 %blk_M_V_12_read, i64 %blk_M_V_13_read, i64 %blk_M_V_14_read, i64 %blk_M_V_15_read, i5 %t_V_1" [SHA512CODE/sha512.cpp:511]   --->   Operation 49 'mux' 'W_V_16' <Predicate = (!icmp_ln1073)> <Delay = 0.49> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.49> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln511 = trunc i5 %t_V_1" [SHA512CODE/sha512.cpp:511]   --->   Operation 50 'trunc' 'trunc_ln511' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.34ns)   --->   "%switch_ln511 = switch i4 %trunc_ln511, void %arrayidx7.case.15, i4 0, void %for.inc.split.arrayidx7.exit_crit_edge, i4 1, void %for.inc.split.arrayidx7.exit_crit_edge21, i4 2, void %arrayidx7.case.2, i4 3, void %arrayidx7.case.3, i4 4, void %arrayidx7.case.4, i4 5, void %arrayidx7.case.5, i4 6, void %arrayidx7.case.6, i4 7, void %arrayidx7.case.7, i4 8, void %arrayidx7.case.8, i4 9, void %arrayidx7.case.9, i4 10, void %arrayidx7.case.10, i4 11, void %arrayidx7.case.11, i4 12, void %arrayidx7.case.12, i4 13, void %arrayidx7.case.13, i4 14, void %arrayidx7.case.14" [SHA512CODE/sha512.cpp:511]   --->   Operation 51 'switch' 'switch_ln511' <Predicate = (!icmp_ln1073)> <Delay = 0.34>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_1" [SHA512CODE/sha512.cpp:511]   --->   Operation 52 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 14)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 53 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 14)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_2" [SHA512CODE/sha512.cpp:511]   --->   Operation 54 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 13)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 55 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 13)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_3" [SHA512CODE/sha512.cpp:511]   --->   Operation 56 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 12)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 57 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 12)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_4" [SHA512CODE/sha512.cpp:511]   --->   Operation 58 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 11)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 59 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 11)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_5" [SHA512CODE/sha512.cpp:511]   --->   Operation 60 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 10)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 61 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 10)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_6" [SHA512CODE/sha512.cpp:511]   --->   Operation 62 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 9)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 63 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 9)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_7" [SHA512CODE/sha512.cpp:511]   --->   Operation 64 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 8)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 65 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 8)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_8" [SHA512CODE/sha512.cpp:511]   --->   Operation 66 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 7)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 67 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 7)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_9" [SHA512CODE/sha512.cpp:511]   --->   Operation 68 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 6)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 69 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 6)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_10" [SHA512CODE/sha512.cpp:511]   --->   Operation 70 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 5)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 71 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 5)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_11" [SHA512CODE/sha512.cpp:511]   --->   Operation 72 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 4)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 73 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 4)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_12" [SHA512CODE/sha512.cpp:511]   --->   Operation 74 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 3)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 75 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 3)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_13" [SHA512CODE/sha512.cpp:511]   --->   Operation 76 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 2)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 77 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 2)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_14" [SHA512CODE/sha512.cpp:511]   --->   Operation 78 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 1)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 79 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 1)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V_15" [SHA512CODE/sha512.cpp:511]   --->   Operation 80 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 0)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 81 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 0)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%store_ln511 = store i64 %W_V_16, i64 %W_V" [SHA512CODE/sha512.cpp:511]   --->   Operation 82 'store' 'store_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 15)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln511 = br void %arrayidx7.exit" [SHA512CODE/sha512.cpp:511]   --->   Operation 83 'br' 'br_ln511' <Predicate = (!icmp_ln1073 & trunc_ln511 == 15)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.38ns)   --->   "%store_ln508 = store i5 %add_ln886, i5 %t_V" [SHA512CODE/sha512.cpp:508]   --->   Operation 84 'store' 'store_ln508' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%W_V_load = load i64 %W_V"   --->   Operation 87 'load' 'W_V_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%W_V_1_load = load i64 %W_V_1"   --->   Operation 88 'load' 'W_V_1_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%W_V_2_load = load i64 %W_V_2"   --->   Operation 89 'load' 'W_V_2_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%W_V_3_load = load i64 %W_V_3"   --->   Operation 90 'load' 'W_V_3_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%W_V_4_load = load i64 %W_V_4"   --->   Operation 91 'load' 'W_V_4_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%W_V_5_load = load i64 %W_V_5"   --->   Operation 92 'load' 'W_V_5_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%W_V_6_load = load i64 %W_V_6"   --->   Operation 93 'load' 'W_V_6_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%W_V_7_load = load i64 %W_V_7"   --->   Operation 94 'load' 'W_V_7_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%W_V_8_load = load i64 %W_V_8"   --->   Operation 95 'load' 'W_V_8_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%W_V_9_load = load i64 %W_V_9"   --->   Operation 96 'load' 'W_V_9_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%W_V_10_load = load i64 %W_V_10"   --->   Operation 97 'load' 'W_V_10_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%W_V_11_load = load i64 %W_V_11"   --->   Operation 98 'load' 'W_V_11_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%W_V_12_load = load i64 %W_V_12"   --->   Operation 99 'load' 'W_V_12_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%W_V_13_load = load i64 %W_V_13"   --->   Operation 100 'load' 'W_V_13_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%W_V_14_load = load i64 %W_V_14"   --->   Operation 101 'load' 'W_V_14_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%W_V_15_load = load i64 %W_V_15"   --->   Operation 102 'load' 'W_V_15_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_15_out, i64 %W_V_15_load"   --->   Operation 103 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_14_out, i64 %W_V_14_load"   --->   Operation 104 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_13_out, i64 %W_V_13_load"   --->   Operation 105 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_12_out, i64 %W_V_12_load"   --->   Operation 106 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_11_out, i64 %W_V_11_load"   --->   Operation 107 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_10_out, i64 %W_V_10_load"   --->   Operation 108 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_9_out, i64 %W_V_9_load"   --->   Operation 109 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_8_out, i64 %W_V_8_load"   --->   Operation 110 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_7_out, i64 %W_V_7_load"   --->   Operation 111 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_6_out, i64 %W_V_6_load"   --->   Operation 112 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_5_out, i64 %W_V_5_load"   --->   Operation 113 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_4_out, i64 %W_V_4_load"   --->   Operation 114 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_3_out, i64 %W_V_3_load"   --->   Operation 115 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_2_out, i64 %W_V_2_load"   --->   Operation 116 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_1_out, i64 %W_V_1_load"   --->   Operation 117 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %W_V_out, i64 %W_V_load"   --->   Operation 118 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 119 'ret' 'ret_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 0.97>
ST_2 : Operation 85 [1/1] (0.97ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i64P0A, i64 %w_strm34, i64 %W_V_16" [/share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 85 'write' 'write_ln174' <Predicate = true> <Delay = 0.97> <CoreInst = "FIFO_LUTRAM">   --->   Core 80 'FIFO_LUTRAM' <Latency = 0> <II = 1> <Delay = 0.97> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 32> <FIFO>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%br_ln508 = br void %for.inc" [SHA512CODE/sha512.cpp:508]   --->   Operation 86 'br' 'br_ln508' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 1.09ns
The critical path consists of the following:
	'alloca' operation ('t.V') [34]  (0 ns)
	'load' operation ('t.V', SHA512CODE/sha512.cpp:511) on local variable 't.V' [72]  (0 ns)
	'add' operation ('add_ln886') [75]  (0.707 ns)
	'store' operation ('store_ln508', SHA512CODE/sha512.cpp:508) of variable 'add_ln886' on local variable 't.V' [133]  (0.387 ns)

 <State 2>: 0.977ns
The critical path consists of the following:
	fifo write operation ('write_ln174', /share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) on port 'w_strm34' (/share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) [132]  (0.977 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
