// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha512_generateMsgSchedule_Pipeline_LOOP_SHA1_GEN_WT64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        w_strm34_din,
        w_strm34_num_data_valid,
        w_strm34_fifo_cap,
        w_strm34_full_n,
        w_strm34_write,
        W_V_reload,
        W_V_2_reload,
        W_V_3_reload,
        W_V_4_reload,
        W_V_5_reload,
        W_V_7_reload,
        W_V_8_reload,
        W_V_9_reload,
        W_V_10_reload,
        W_V_11_reload,
        W_V_12_reload,
        W_V_13_reload,
        W_V_15_reload,
        W_V_14_reload,
        W_V_6_reload,
        W_V_1_reload
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] w_strm34_din;
input  [5:0] w_strm34_num_data_valid;
input  [5:0] w_strm34_fifo_cap;
input   w_strm34_full_n;
output   w_strm34_write;
input  [63:0] W_V_reload;
input  [63:0] W_V_2_reload;
input  [63:0] W_V_3_reload;
input  [63:0] W_V_4_reload;
input  [63:0] W_V_5_reload;
input  [63:0] W_V_7_reload;
input  [63:0] W_V_8_reload;
input  [63:0] W_V_9_reload;
input  [63:0] W_V_10_reload;
input  [63:0] W_V_11_reload;
input  [63:0] W_V_12_reload;
input  [63:0] W_V_13_reload;
input  [63:0] W_V_15_reload;
input  [63:0] W_V_14_reload;
input  [63:0] W_V_6_reload;
input  [63:0] W_V_1_reload;

reg ap_idle;
reg w_strm34_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1073_fu_404_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    w_strm34_blk_n;
wire    ap_block_pp0_stage0;
wire   [63:0] Wt_V_1_fu_571_p2;
reg   [63:0] Wt_V_1_reg_790;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] x_V_fu_106;
wire    ap_loop_init;
reg   [63:0] empty_fu_110;
reg   [63:0] x_V_2_fu_114;
reg   [6:0] t_V_1_fu_118;
wire   [6:0] add_ln886_fu_577_p2;
reg   [63:0] x_V_1_fu_122;
reg   [63:0] p_0_0_0278_1873_fu_126;
reg   [63:0] p_0_0_0278_2874_fu_130;
reg   [63:0] p_0_0_0278_3875_fu_134;
reg   [63:0] p_0_0_0278_4876_fu_138;
reg   [63:0] p_0_0_0278_5877_fu_142;
reg   [63:0] p_0_0_0278_6878_fu_146;
reg   [63:0] p_0_0_0278_7879_fu_150;
reg   [63:0] p_0_0_0278_9880_fu_154;
reg   [63:0] p_0_0_0278_10881_fu_158;
reg   [63:0] p_0_0_0278_11882_fu_162;
reg   [63:0] x_V_3_fu_166;
reg   [63:0] Wt_V_fu_170;
reg    ap_block_pp0_stage0_01001;
wire   [18:0] trunc_ln1739_fu_429_p1;
wire   [44:0] r_V_fu_419_p4;
wire   [60:0] trunc_ln1739_1_fu_451_p1;
wire   [2:0] r_V_6_fu_441_p4;
wire   [57:0] r_V_3_fu_463_p4;
wire   [63:0] ret_V_6_fu_433_p3;
wire   [63:0] zext_ln1739_fu_473_p1;
wire   [63:0] xor_ln1545_fu_477_p2;
wire   [63:0] ret_V_7_fu_455_p3;
wire   [0:0] trunc_ln1739_2_fu_499_p1;
wire   [62:0] r_V_9_fu_489_p4;
wire   [7:0] trunc_ln1739_3_fu_521_p1;
wire   [55:0] r_V_s_fu_511_p4;
wire   [56:0] r_V_4_fu_533_p4;
wire   [63:0] zext_ln1739_1_fu_543_p1;
wire   [63:0] ret_V_9_fu_525_p3;
wire   [63:0] xor_ln1545_2_fu_547_p2;
wire   [63:0] ret_V_8_fu_503_p3;
wire   [63:0] ret_V_5_fu_553_p2;
wire   [63:0] ret_V_fu_483_p2;
wire   [63:0] add_ln232_1_fu_565_p2;
wire   [63:0] add_ln232_fu_559_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sha512_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Wt_V_fu_170 <= W_V_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            Wt_V_fu_170 <= Wt_V_1_fu_571_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_110 <= W_V_6_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            empty_fu_110 <= p_0_0_0278_9880_fu_154;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_10881_fu_158 <= W_V_4_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_10881_fu_158 <= p_0_0_0278_11882_fu_162;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_11882_fu_162 <= W_V_3_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_11882_fu_162 <= x_V_3_fu_166;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_1873_fu_126 <= W_V_13_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_1873_fu_126 <= p_0_0_0278_2874_fu_130;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_2874_fu_130 <= W_V_12_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_2874_fu_130 <= p_0_0_0278_3875_fu_134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_3875_fu_134 <= W_V_11_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_3875_fu_134 <= p_0_0_0278_4876_fu_138;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_4876_fu_138 <= W_V_10_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_4876_fu_138 <= p_0_0_0278_5877_fu_142;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_5877_fu_142 <= W_V_9_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_5877_fu_142 <= p_0_0_0278_6878_fu_146;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_6878_fu_146 <= W_V_8_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_6878_fu_146 <= p_0_0_0278_7879_fu_150;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_7879_fu_150 <= W_V_7_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_7879_fu_150 <= empty_fu_110;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0278_9880_fu_154 <= W_V_5_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_0_0_0278_9880_fu_154 <= p_0_0_0278_10881_fu_158;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            t_V_1_fu_118 <= 7'd16;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            t_V_1_fu_118 <= add_ln886_fu_577_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_V_1_fu_122 <= W_V_14_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_V_1_fu_122 <= p_0_0_0278_1873_fu_126;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_V_2_fu_114 <= W_V_15_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_V_2_fu_114 <= x_V_1_fu_122;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_V_3_fu_166 <= W_V_2_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_V_3_fu_166 <= x_V_fu_106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_V_fu_106 <= W_V_1_reload;
        end else if (((icmp_ln1073_fu_404_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_V_fu_106 <= Wt_V_fu_170;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_fu_404_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Wt_V_1_reg_790 <= Wt_V_1_fu_571_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_404_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_strm34_blk_n = w_strm34_full_n;
    end else begin
        w_strm34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_strm34_write = 1'b1;
    end else begin
        w_strm34_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Wt_V_1_fu_571_p2 = (add_ln232_1_fu_565_p2 + add_ln232_fu_559_p2);

assign add_ln232_1_fu_565_p2 = (ret_V_fu_483_p2 + empty_fu_110);

assign add_ln232_fu_559_p2 = (x_V_2_fu_114 + ret_V_5_fu_553_p2);

assign add_ln886_fu_577_p2 = (t_V_1_fu_118 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((w_strm34_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((w_strm34_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((w_strm34_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (w_strm34_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln1073_fu_404_p2 = ((t_V_1_fu_118 == 7'd80) ? 1'b1 : 1'b0);

assign r_V_3_fu_463_p4 = {{x_V_fu_106[63:6]}};

assign r_V_4_fu_533_p4 = {{x_V_1_fu_122[63:7]}};

assign r_V_6_fu_441_p4 = {{x_V_fu_106[63:61]}};

assign r_V_9_fu_489_p4 = {{x_V_1_fu_122[63:1]}};

assign r_V_fu_419_p4 = {{x_V_fu_106[63:19]}};

assign r_V_s_fu_511_p4 = {{x_V_1_fu_122[63:8]}};

assign ret_V_5_fu_553_p2 = (xor_ln1545_2_fu_547_p2 ^ ret_V_8_fu_503_p3);

assign ret_V_6_fu_433_p3 = {{trunc_ln1739_fu_429_p1}, {r_V_fu_419_p4}};

assign ret_V_7_fu_455_p3 = {{trunc_ln1739_1_fu_451_p1}, {r_V_6_fu_441_p4}};

assign ret_V_8_fu_503_p3 = {{trunc_ln1739_2_fu_499_p1}, {r_V_9_fu_489_p4}};

assign ret_V_9_fu_525_p3 = {{trunc_ln1739_3_fu_521_p1}, {r_V_s_fu_511_p4}};

assign ret_V_fu_483_p2 = (xor_ln1545_fu_477_p2 ^ ret_V_7_fu_455_p3);

assign trunc_ln1739_1_fu_451_p1 = x_V_fu_106[60:0];

assign trunc_ln1739_2_fu_499_p1 = x_V_1_fu_122[0:0];

assign trunc_ln1739_3_fu_521_p1 = x_V_1_fu_122[7:0];

assign trunc_ln1739_fu_429_p1 = x_V_fu_106[18:0];

assign w_strm34_din = Wt_V_1_reg_790;

assign xor_ln1545_2_fu_547_p2 = (zext_ln1739_1_fu_543_p1 ^ ret_V_9_fu_525_p3);

assign xor_ln1545_fu_477_p2 = (zext_ln1739_fu_473_p1 ^ ret_V_6_fu_433_p3);

assign zext_ln1739_1_fu_543_p1 = r_V_4_fu_533_p4;

assign zext_ln1739_fu_473_p1 = r_V_3_fu_463_p4;

endmodule //sha512_generateMsgSchedule_Pipeline_LOOP_SHA1_GEN_WT64
