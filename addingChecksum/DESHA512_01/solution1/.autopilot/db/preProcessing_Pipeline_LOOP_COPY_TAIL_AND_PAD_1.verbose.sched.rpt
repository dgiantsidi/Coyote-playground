

================================================================
== Vitis HLS Report for 'preProcessing_Pipeline_LOOP_COPY_TAIL_AND_PAD_1'
================================================================
* Date:           Thu Aug  3 21:14:57 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        DESHA512_01
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.898 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |       16|       16|  64.000 ns|  64.000 ns|   16|   16|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                            |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |          Loop Name         |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_COPY_TAIL_AND_PAD_1  |       14|       14|         1|          1|          1|    14|       yes|
        +----------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.89>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%index_V = alloca i32 1"   --->   Operation 4 'alloca' 'index_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%b_M_V = alloca i32 1"   --->   Operation 5 'alloca' 'b_M_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%b_M_V_1 = alloca i32 1"   --->   Operation 6 'alloca' 'b_M_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%b_M_V_2 = alloca i32 1"   --->   Operation 7 'alloca' 'b_M_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%b_M_V_3 = alloca i32 1"   --->   Operation 8 'alloca' 'b_M_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%b_M_V_4 = alloca i32 1"   --->   Operation 9 'alloca' 'b_M_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%b_M_V_5 = alloca i32 1"   --->   Operation 10 'alloca' 'b_M_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%b_M_V_6 = alloca i32 1"   --->   Operation 11 'alloca' 'b_M_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%b_M_V_7 = alloca i32 1"   --->   Operation 12 'alloca' 'b_M_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%b_M_V_8 = alloca i32 1"   --->   Operation 13 'alloca' 'b_M_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%b_M_V_9 = alloca i32 1"   --->   Operation 14 'alloca' 'b_M_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%b_M_V_10 = alloca i32 1"   --->   Operation 15 'alloca' 'b_M_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%b_M_V_11 = alloca i32 1"   --->   Operation 16 'alloca' 'b_M_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%b_M_V_12 = alloca i32 1"   --->   Operation 17 'alloca' 'b_M_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%b_M_V_13 = alloca i32 1"   --->   Operation 18 'alloca' 'b_M_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%inp512c_V_2_read = read i512 @_ssdm_op_Read.ap_auto.i512, i512 %inp512c_V_2"   --->   Operation 19 'read' 'inp512c_V_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %index_V"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body111"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%index_V_1 = load i4 %index_V"   --->   Operation 22 'load' 'index_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.65ns)   --->   "%icmp_ln1073 = icmp_eq  i4 %index_V_1, i4 14"   --->   Operation 23 'icmp' 'icmp_ln1073' <Predicate = true> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 14, i64 14, i64 14"   --->   Operation 24 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.70ns)   --->   "%add_ln886 = add i4 %index_V_1, i4 1"   --->   Operation 25 'add' 'add_ln886' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln221 = br i1 %icmp_ln1073, void %for.body111.split, void %for.end142.exitStub" [SHA512CODE/sha512.cpp:221]   --->   Operation 26 'br' 'br_ln221' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln1073 = trunc i4 %index_V_1"   --->   Operation 27 'trunc' 'trunc_ln1073' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specpipeline_ln222 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [SHA512CODE/sha512.cpp:222]   --->   Operation 28 'specpipeline' 'specpipeline_ln222' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specloopname_ln217 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [SHA512CODE/sha512.cpp:217]   --->   Operation 29 'specloopname' 'specloopname_ln217' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %index_V_1, i32 3"   --->   Operation 30 'bitselect' 'tmp' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln223 = br i1 %tmp, void %if.then113, void %if.else126" [SHA512CODE/sha512.cpp:223]   --->   Operation 31 'br' 'br_ln223' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.12ns)   --->   "%xor_ln598 = xor i3 %trunc_ln1073, i3 7"   --->   Operation 32 'xor' 'xor_ln598' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%Lo = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i3.i6, i3 %xor_ln598, i6 0"   --->   Operation 33 'bitconcatenate' 'Lo' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%Hi = or i9 %Lo, i9 63"   --->   Operation 34 'or' 'Hi' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.59ns)   --->   "%icmp_ln674 = icmp_ugt  i9 %Lo, i9 %Hi"   --->   Operation 35 'icmp' 'icmp_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln674 = zext i9 %Lo"   --->   Operation 36 'zext' 'zext_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln674_1 = zext i9 %Hi"   --->   Operation 37 'zext' 'zext_ln674_1' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln674)   --->   "%tmp_1 = partselect i512 @llvm.part.select.i512, i512 %inp512c_V_2_read, i32 511, i32 0"   --->   Operation 38 'partselect' 'tmp_1' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.71ns)   --->   "%sub_ln674 = sub i10 %zext_ln674, i10 %zext_ln674_1"   --->   Operation 39 'sub' 'sub_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln674)   --->   "%xor_ln674 = xor i10 %zext_ln674, i10 511"   --->   Operation 40 'xor' 'xor_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.19> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.71ns)   --->   "%sub_ln674_1 = sub i10 %zext_ln674_1, i10 %zext_ln674"   --->   Operation 41 'sub' 'sub_ln674_1' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node sub_ln674_2)   --->   "%select_ln674 = select i1 %icmp_ln674, i10 %sub_ln674, i10 %sub_ln674_1"   --->   Operation 42 'select' 'select_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln674)   --->   "%select_ln674_1 = select i1 %icmp_ln674, i512 %tmp_1, i512 %inp512c_V_2_read"   --->   Operation 43 'select' 'select_ln674_1' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln674)   --->   "%select_ln674_2 = select i1 %icmp_ln674, i10 %xor_ln674, i10 %zext_ln674"   --->   Operation 44 'select' 'select_ln674_2' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.72ns) (out node of the LUT)   --->   "%sub_ln674_2 = sub i10 511, i10 %select_ln674"   --->   Operation 45 'sub' 'sub_ln674_2' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln674)   --->   "%zext_ln674_2 = zext i10 %select_ln674_2"   --->   Operation 46 'zext' 'zext_ln674_2' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%zext_ln674_3 = zext i10 %sub_ln674_2"   --->   Operation 47 'zext' 'zext_ln674_3' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.44ns) (out node of the LUT)   --->   "%lshr_ln674 = lshr i512 %select_ln674_1, i512 %zext_ln674_2"   --->   Operation 48 'lshr' 'lshr_ln674' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 1.44> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%lshr_ln674_1 = lshr i512 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095, i512 %zext_ln674_3"   --->   Operation 49 'lshr' 'lshr_ln674_1' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.74ns) (out node of the LUT)   --->   "%p_Result_s = and i512 %lshr_ln674, i512 %lshr_ln674_1"   --->   Operation 50 'and' 'p_Result_s' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.74> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%b_M_V_15 = trunc i512 %p_Result_s"   --->   Operation 51 'trunc' 'b_M_V_15' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.34ns)   --->   "%switch_ln228 = switch i4 %index_V_1, void %if.then113.for.inc140_crit_edge, i4 7, void %arrayidx1325.case.7, i4 1, void %if.then113.for.inc140_crit_edge4, i4 2, void %arrayidx1325.case.2, i4 3, void %arrayidx1325.case.3, i4 4, void %arrayidx1325.case.4, i4 5, void %arrayidx1325.case.5, i4 6, void %arrayidx1325.case.6" [SHA512CODE/sha512.cpp:228]   --->   Operation 52 'switch' 'switch_ln228' <Predicate = (!icmp_ln1073 & !tmp)> <Delay = 0.34>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_6" [SHA512CODE/sha512.cpp:228]   --->   Operation 53 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 6)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 54 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 6)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_5" [SHA512CODE/sha512.cpp:228]   --->   Operation 55 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 5)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 56 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 5)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_4" [SHA512CODE/sha512.cpp:228]   --->   Operation 57 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 4)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 58 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 4)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_3" [SHA512CODE/sha512.cpp:228]   --->   Operation 59 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 3)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 60 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 3)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_2" [SHA512CODE/sha512.cpp:228]   --->   Operation 61 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 2)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 62 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 2)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_1" [SHA512CODE/sha512.cpp:228]   --->   Operation 63 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 64 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V_7" [SHA512CODE/sha512.cpp:228]   --->   Operation 65 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 7)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 66 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 == 7)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%store_ln228 = store i64 %b_M_V_15, i64 %b_M_V" [SHA512CODE/sha512.cpp:228]   --->   Operation 67 'store' 'store_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 != 7 & index_V_1 != 1 & index_V_1 != 2 & index_V_1 != 3 & index_V_1 != 4 & index_V_1 != 5 & index_V_1 != 6)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln228 = br void %for.inc140" [SHA512CODE/sha512.cpp:228]   --->   Operation 68 'br' 'br_ln228' <Predicate = (!icmp_ln1073 & !tmp & index_V_1 != 7 & index_V_1 != 1 & index_V_1 != 2 & index_V_1 != 3 & index_V_1 != 4 & index_V_1 != 5 & index_V_1 != 6)> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.65ns)   --->   "%icmp_ln1081 = icmp_ugt  i4 %index_V_1, i4 8"   --->   Operation 69 'icmp' 'icmp_ln1081' <Predicate = (!icmp_ln1073 & tmp)> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln229 = br i1 %icmp_ln1081, void %if.else126.for.inc140_crit_edge, void %if.then128" [SHA512CODE/sha512.cpp:229]   --->   Operation 70 'br' 'br_ln229' <Predicate = (!icmp_ln1073 & tmp)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%store_ln229 = store i64 9223372036854775808, i64 %b_M_V_8" [SHA512CODE/sha512.cpp:229]   --->   Operation 71 'store' 'store_ln229' <Predicate = (!icmp_ln1073 & tmp & !icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln229 = br void %for.inc140" [SHA512CODE/sha512.cpp:229]   --->   Operation 72 'br' 'br_ln229' <Predicate = (!icmp_ln1073 & tmp & !icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.34ns)   --->   "%switch_ln231 = switch i4 %index_V_1, void %arrayidx1325.case.1340, i4 12, void %arrayidx1325.case.1239, i4 11, void %arrayidx1325.case.1138, i4 10, void %if.then128.for.inc140_crit_edge3, i4 9, void %if.then128.for.inc140_crit_edge" [SHA512CODE/sha512.cpp:231]   --->   Operation 73 'switch' 'switch_ln231' <Predicate = (!icmp_ln1073 & tmp & icmp_ln1081)> <Delay = 0.34>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%store_ln231 = store i64 0, i64 %b_M_V_9" [SHA512CODE/sha512.cpp:231]   --->   Operation 74 'store' 'store_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 9 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln231 = br void %for.inc140" [SHA512CODE/sha512.cpp:231]   --->   Operation 75 'br' 'br_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 9 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%store_ln231 = store i64 0, i64 %b_M_V_10" [SHA512CODE/sha512.cpp:231]   --->   Operation 76 'store' 'store_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 10 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln231 = br void %for.inc140" [SHA512CODE/sha512.cpp:231]   --->   Operation 77 'br' 'br_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 10 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%store_ln231 = store i64 0, i64 %b_M_V_11" [SHA512CODE/sha512.cpp:231]   --->   Operation 78 'store' 'store_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 11 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln231 = br void %for.inc140" [SHA512CODE/sha512.cpp:231]   --->   Operation 79 'br' 'br_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 11 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%store_ln231 = store i64 0, i64 %b_M_V_12" [SHA512CODE/sha512.cpp:231]   --->   Operation 80 'store' 'store_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 12 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln231 = br void %for.inc140" [SHA512CODE/sha512.cpp:231]   --->   Operation 81 'br' 'br_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 == 12 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%store_ln231 = store i64 0, i64 %b_M_V_13" [SHA512CODE/sha512.cpp:231]   --->   Operation 82 'store' 'store_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 != 9 & index_V_1 != 10 & index_V_1 != 11 & index_V_1 != 12 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln231 = br void %for.inc140" [SHA512CODE/sha512.cpp:231]   --->   Operation 83 'br' 'br_ln231' <Predicate = (!icmp_ln1073 & tmp & index_V_1 != 9 & index_V_1 != 10 & index_V_1 != 11 & index_V_1 != 12 & icmp_ln1081)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.38ns)   --->   "%store_ln221 = store i4 %add_ln886, i4 %index_V" [SHA512CODE/sha512.cpp:221]   --->   Operation 84 'store' 'store_ln221' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln221 = br void %for.body111" [SHA512CODE/sha512.cpp:221]   --->   Operation 85 'br' 'br_ln221' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%b_M_V_load = load i64 %b_M_V"   --->   Operation 86 'load' 'b_M_V_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%b_M_V_1_load = load i64 %b_M_V_1"   --->   Operation 87 'load' 'b_M_V_1_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%b_M_V_2_load = load i64 %b_M_V_2"   --->   Operation 88 'load' 'b_M_V_2_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%b_M_V_3_load = load i64 %b_M_V_3"   --->   Operation 89 'load' 'b_M_V_3_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%b_M_V_4_load = load i64 %b_M_V_4"   --->   Operation 90 'load' 'b_M_V_4_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%b_M_V_5_load = load i64 %b_M_V_5"   --->   Operation 91 'load' 'b_M_V_5_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%b_M_V_6_load = load i64 %b_M_V_6"   --->   Operation 92 'load' 'b_M_V_6_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%b_M_V_7_load = load i64 %b_M_V_7"   --->   Operation 93 'load' 'b_M_V_7_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%b_M_V_8_load = load i64 %b_M_V_8"   --->   Operation 94 'load' 'b_M_V_8_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%b_M_V_9_load = load i64 %b_M_V_9"   --->   Operation 95 'load' 'b_M_V_9_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%b_M_V_10_load = load i64 %b_M_V_10"   --->   Operation 96 'load' 'b_M_V_10_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%b_M_V_11_load = load i64 %b_M_V_11"   --->   Operation 97 'load' 'b_M_V_11_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%b_M_V_12_load = load i64 %b_M_V_12"   --->   Operation 98 'load' 'b_M_V_12_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%b_M_V_13_load = load i64 %b_M_V_13"   --->   Operation 99 'load' 'b_M_V_13_load' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_13_out, i64 %b_M_V_13_load"   --->   Operation 100 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_12_out, i64 %b_M_V_12_load"   --->   Operation 101 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_11_out, i64 %b_M_V_11_load"   --->   Operation 102 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_10_out, i64 %b_M_V_10_load"   --->   Operation 103 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_9_out, i64 %b_M_V_9_load"   --->   Operation 104 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_8_out, i64 %b_M_V_8_load"   --->   Operation 105 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_7_out, i64 %b_M_V_7_load"   --->   Operation 106 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_6_out, i64 %b_M_V_6_load"   --->   Operation 107 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_5_out, i64 %b_M_V_5_load"   --->   Operation 108 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_4_out, i64 %b_M_V_4_load"   --->   Operation 109 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_3_out, i64 %b_M_V_3_load"   --->   Operation 110 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_2_out, i64 %b_M_V_2_load"   --->   Operation 111 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_1_out, i64 %b_M_V_1_load"   --->   Operation 112 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %b_M_V_out, i64 %b_M_V_load"   --->   Operation 113 'write' 'write_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 114 'ret' 'ret_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 2.9ns
The critical path consists of the following:
	'alloca' operation ('index.V') [16]  (0 ns)
	'load' operation ('i.V') on local variable 'index.V' [35]  (0 ns)
	'xor' operation ('xor_ln598') [47]  (0.122 ns)
	'icmp' operation ('icmp_ln674') [50]  (0.593 ns)
	'select' operation ('select_ln674_1') [58]  (0 ns)
	'lshr' operation ('lshr_ln674') [63]  (1.44 ns)
	'and' operation ('__Result__') [65]  (0.74 ns)
	'store' operation ('store_ln228', SHA512CODE/sha512.cpp:228) of variable 'b.M.V' on local variable 'b.M.V' [69]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
