

================================================================
== Vitis HLS Report for 'generateMsgSchedule_Pipeline_LOOP_SHA1_GEN_WT64'
================================================================
* Date:           Thu Aug  3 21:15:00 2023

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:47:01 MDT 2022)
* Project:        DESHA512_01
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.377 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       66|       66|  0.264 us|  0.264 us|   66|   66|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_SHA1_GEN_WT64  |       64|       64|         2|          1|          1|    64|       yes|
        +----------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%x_V = alloca i32 1"   --->   Operation 5 'alloca' 'x_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 6 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%x_V_2 = alloca i32 1"   --->   Operation 7 'alloca' 'x_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%t_V_1 = alloca i32 1"   --->   Operation 8 'alloca' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%x_V_1 = alloca i32 1"   --->   Operation 9 'alloca' 'x_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_0_0_0278_1873 = alloca i32 1"   --->   Operation 10 'alloca' 'p_0_0_0278_1873' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_0_0_0278_2874 = alloca i32 1"   --->   Operation 11 'alloca' 'p_0_0_0278_2874' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_0_0_0278_3875 = alloca i32 1"   --->   Operation 12 'alloca' 'p_0_0_0278_3875' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_0_0_0278_4876 = alloca i32 1"   --->   Operation 13 'alloca' 'p_0_0_0278_4876' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_0_0_0278_5877 = alloca i32 1"   --->   Operation 14 'alloca' 'p_0_0_0278_5877' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%p_0_0_0278_6878 = alloca i32 1"   --->   Operation 15 'alloca' 'p_0_0_0278_6878' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_0_0_0278_7879 = alloca i32 1"   --->   Operation 16 'alloca' 'p_0_0_0278_7879' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_0_0_0278_9880 = alloca i32 1"   --->   Operation 17 'alloca' 'p_0_0_0278_9880' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_0_0_0278_10881 = alloca i32 1"   --->   Operation 18 'alloca' 'p_0_0_0278_10881' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_0_0_0278_11882 = alloca i32 1"   --->   Operation 19 'alloca' 'p_0_0_0278_11882' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%x_V_3 = alloca i32 1"   --->   Operation 20 'alloca' 'x_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%Wt_V = alloca i32 1"   --->   Operation 21 'alloca' 'Wt_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specmemcore_ln0 = specmemcore void @_ssdm_op_SpecMemCore, i64 %w_strm6, i64 666, i64 9, i64 18446744073709551615"   --->   Operation 22 'specmemcore' 'specmemcore_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %w_strm6, void @empty_7, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%W_V_1_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_1_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 24 'read' 'W_V_1_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%W_V_6_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_6_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 25 'read' 'W_V_6_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%W_V_14_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_14_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 26 'read' 'W_V_14_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%W_V_15_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_15_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 27 'read' 'W_V_15_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%W_V_13_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_13_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 28 'read' 'W_V_13_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%W_V_12_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_12_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 29 'read' 'W_V_12_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%W_V_11_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_11_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 30 'read' 'W_V_11_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%W_V_10_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_10_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 31 'read' 'W_V_10_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%W_V_9_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_9_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 32 'read' 'W_V_9_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%W_V_8_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_8_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 33 'read' 'W_V_8_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%W_V_7_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_7_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 34 'read' 'W_V_7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%W_V_5_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_5_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 35 'read' 'W_V_5_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%W_V_4_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_4_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 36 'read' 'W_V_4_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%W_V_3_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_3_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 37 'read' 'W_V_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%W_V_2_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_2_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 38 'read' 'W_V_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%W_V_reload_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %W_V_reload" [SHA512CODE/sha512.cpp:492]   --->   Operation 39 'read' 'W_V_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_reload_read, i64 %Wt_V" [SHA512CODE/sha512.cpp:492]   --->   Operation 40 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 41 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_2_reload_read, i64 %x_V_3" [SHA512CODE/sha512.cpp:492]   --->   Operation 41 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 42 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_3_reload_read, i64 %p_0_0_0278_11882" [SHA512CODE/sha512.cpp:492]   --->   Operation 42 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 43 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_4_reload_read, i64 %p_0_0_0278_10881" [SHA512CODE/sha512.cpp:492]   --->   Operation 43 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 44 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_5_reload_read, i64 %p_0_0_0278_9880" [SHA512CODE/sha512.cpp:492]   --->   Operation 44 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 45 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_7_reload_read, i64 %p_0_0_0278_7879" [SHA512CODE/sha512.cpp:492]   --->   Operation 45 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 46 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_8_reload_read, i64 %p_0_0_0278_6878" [SHA512CODE/sha512.cpp:492]   --->   Operation 46 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 47 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_9_reload_read, i64 %p_0_0_0278_5877" [SHA512CODE/sha512.cpp:492]   --->   Operation 47 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 48 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_10_reload_read, i64 %p_0_0_0278_4876" [SHA512CODE/sha512.cpp:492]   --->   Operation 48 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 49 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_11_reload_read, i64 %p_0_0_0278_3875" [SHA512CODE/sha512.cpp:492]   --->   Operation 49 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 50 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_12_reload_read, i64 %p_0_0_0278_2874" [SHA512CODE/sha512.cpp:492]   --->   Operation 50 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 51 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_13_reload_read, i64 %p_0_0_0278_1873" [SHA512CODE/sha512.cpp:492]   --->   Operation 51 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 52 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_14_reload_read, i64 %x_V_1" [SHA512CODE/sha512.cpp:492]   --->   Operation 52 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 53 [1/1] (0.38ns)   --->   "%store_ln0 = store i7 16, i7 %t_V_1"   --->   Operation 53 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 54 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_15_reload_read, i64 %x_V_2" [SHA512CODE/sha512.cpp:492]   --->   Operation 54 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 55 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_6_reload_read, i64 %empty" [SHA512CODE/sha512.cpp:492]   --->   Operation 55 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 56 [1/1] (0.38ns)   --->   "%store_ln492 = store i64 %W_V_1_reload_read, i64 %x_V" [SHA512CODE/sha512.cpp:492]   --->   Operation 56 'store' 'store_ln492' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc32"   --->   Operation 57 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.37>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%t_V = load i7 %t_V_1"   --->   Operation 58 'load' 't_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%x_V_4 = load i64 %x_V_1"   --->   Operation 59 'load' 'x_V_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%p_0_0_0278_1873_load = load i64 %p_0_0_0278_1873"   --->   Operation 60 'load' 'p_0_0_0278_1873_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%p_0_0_0278_2874_load = load i64 %p_0_0_0278_2874"   --->   Operation 61 'load' 'p_0_0_0278_2874_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%p_0_0_0278_3875_load = load i64 %p_0_0_0278_3875"   --->   Operation 62 'load' 'p_0_0_0278_3875_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%p_0_0_0278_4876_load = load i64 %p_0_0_0278_4876"   --->   Operation 63 'load' 'p_0_0_0278_4876_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%p_0_0_0278_5877_load = load i64 %p_0_0_0278_5877"   --->   Operation 64 'load' 'p_0_0_0278_5877_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%p_0_0_0278_6878_load = load i64 %p_0_0_0278_6878"   --->   Operation 65 'load' 'p_0_0_0278_6878_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%p_0_0_0278_7879_load = load i64 %p_0_0_0278_7879"   --->   Operation 66 'load' 'p_0_0_0278_7879_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%p_0_0_0278_9880_load = load i64 %p_0_0_0278_9880"   --->   Operation 67 'load' 'p_0_0_0278_9880_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%p_0_0_0278_10881_load = load i64 %p_0_0_0278_10881"   --->   Operation 68 'load' 'p_0_0_0278_10881_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%p_0_0_0278_11882_load = load i64 %p_0_0_0278_11882"   --->   Operation 69 'load' 'p_0_0_0278_11882_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%x_V_3_load = load i64 %x_V_3"   --->   Operation 70 'load' 'x_V_3_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%Wt_V_load = load i64 %Wt_V"   --->   Operation 71 'load' 'Wt_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.59ns)   --->   "%icmp_ln1073 = icmp_eq  i7 %t_V, i7 80"   --->   Operation 72 'icmp' 'icmp_ln1073' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 73 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln518 = br i1 %icmp_ln1073, void %for.inc32.split, void %do.cond.exitStub" [SHA512CODE/sha512.cpp:518]   --->   Operation 74 'br' 'br_ln518' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%x_V_load = load i64 %x_V" [SHA512CODE/sha512.cpp:518]   --->   Operation 75 'load' 'x_V_load' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%p_load17 = load i64 %empty" [SHA512CODE/sha512.cpp:518]   --->   Operation 76 'load' 'p_load17' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%x_V_2_load = load i64 %x_V_2"   --->   Operation 77 'load' 'x_V_2_load' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%r_V = partselect i45 @_ssdm_op_PartSelect.i45.i64.i32.i32, i64 %x_V_load, i32 19, i32 63"   --->   Operation 78 'partselect' 'r_V' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%trunc_ln1739 = trunc i64 %x_V_load"   --->   Operation 79 'trunc' 'trunc_ln1739' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%ret_V_6 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i19.i45, i19 %trunc_ln1739, i45 %r_V"   --->   Operation 80 'bitconcatenate' 'ret_V_6' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%r_V_6 = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %x_V_load, i32 61, i32 63"   --->   Operation 81 'partselect' 'r_V_6' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%trunc_ln1739_1 = trunc i64 %x_V_load"   --->   Operation 82 'trunc' 'trunc_ln1739_1' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%ret_V_7 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i61.i3, i61 %trunc_ln1739_1, i3 %r_V_6"   --->   Operation 83 'bitconcatenate' 'ret_V_7' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%r_V_3 = partselect i58 @_ssdm_op_PartSelect.i58.i64.i32.i32, i64 %x_V_load, i32 6, i32 63"   --->   Operation 84 'partselect' 'r_V_3' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%zext_ln1739 = zext i58 %r_V_3"   --->   Operation 85 'zext' 'zext_ln1739' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%xor_ln1545 = xor i64 %ret_V_6, i64 %zext_ln1739"   --->   Operation 86 'xor' 'xor_ln1545' <Predicate = (!icmp_ln1073)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node add_ln232_1)   --->   "%ret_V = xor i64 %xor_ln1545, i64 %ret_V_7"   --->   Operation 87 'xor' 'ret_V' <Predicate = (!icmp_ln1073)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%r_V_9 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %x_V_4, i32 1, i32 63"   --->   Operation 88 'partselect' 'r_V_9' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%trunc_ln1739_2 = trunc i64 %x_V_4"   --->   Operation 89 'trunc' 'trunc_ln1739_2' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%ret_V_8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i1.i63, i1 %trunc_ln1739_2, i63 %r_V_9"   --->   Operation 90 'bitconcatenate' 'ret_V_8' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%r_V_s = partselect i56 @_ssdm_op_PartSelect.i56.i64.i32.i32, i64 %x_V_4, i32 8, i32 63"   --->   Operation 91 'partselect' 'r_V_s' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%trunc_ln1739_3 = trunc i64 %x_V_4"   --->   Operation 92 'trunc' 'trunc_ln1739_3' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%ret_V_9 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i8.i56, i8 %trunc_ln1739_3, i56 %r_V_s"   --->   Operation 93 'bitconcatenate' 'ret_V_9' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%r_V_4 = partselect i57 @_ssdm_op_PartSelect.i57.i64.i32.i32, i64 %x_V_4, i32 7, i32 63"   --->   Operation 94 'partselect' 'r_V_4' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%zext_ln1739_1 = zext i57 %r_V_4"   --->   Operation 95 'zext' 'zext_ln1739_1' <Predicate = (!icmp_ln1073)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node ret_V_5)   --->   "%xor_ln1545_2 = xor i64 %zext_ln1739_1, i64 %ret_V_9"   --->   Operation 96 'xor' 'xor_ln1545_2' <Predicate = (!icmp_ln1073)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 97 [1/1] (0.28ns) (out node of the LUT)   --->   "%ret_V_5 = xor i64 %xor_ln1545_2, i64 %ret_V_8"   --->   Operation 97 'xor' 'ret_V_5' <Predicate = (!icmp_ln1073)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 98 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln232 = add i64 %x_V_2_load, i64 %ret_V_5"   --->   Operation 98 'add' 'add_ln232' <Predicate = (!icmp_ln1073)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.42> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 99 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln232_1 = add i64 %ret_V, i64 %p_load17"   --->   Operation 99 'add' 'add_ln232_1' <Predicate = (!icmp_ln1073)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 100 [1/1] (0.84ns) (root node of TernaryAdder)   --->   "%Wt_V_1 = add i64 %add_ln232_1, i64 %add_ln232"   --->   Operation 100 'add' 'Wt_V_1' <Predicate = (!icmp_ln1073)> <Delay = 0.84> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.42> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 101 [1/1] (0.70ns)   --->   "%add_ln886 = add i7 %t_V, i7 1"   --->   Operation 101 'add' 'add_ln886' <Predicate = (!icmp_ln1073)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 102 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %Wt_V_1, i64 %Wt_V" [SHA512CODE/sha512.cpp:518]   --->   Operation 102 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 103 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %x_V_load, i64 %x_V_3" [SHA512CODE/sha512.cpp:518]   --->   Operation 103 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 104 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %x_V_3_load, i64 %p_0_0_0278_11882" [SHA512CODE/sha512.cpp:518]   --->   Operation 104 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 105 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_11882_load, i64 %p_0_0_0278_10881" [SHA512CODE/sha512.cpp:518]   --->   Operation 105 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 106 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_10881_load, i64 %p_0_0_0278_9880" [SHA512CODE/sha512.cpp:518]   --->   Operation 106 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 107 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_load17, i64 %p_0_0_0278_7879" [SHA512CODE/sha512.cpp:518]   --->   Operation 107 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 108 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_7879_load, i64 %p_0_0_0278_6878" [SHA512CODE/sha512.cpp:518]   --->   Operation 108 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 109 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_6878_load, i64 %p_0_0_0278_5877" [SHA512CODE/sha512.cpp:518]   --->   Operation 109 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 110 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_5877_load, i64 %p_0_0_0278_4876" [SHA512CODE/sha512.cpp:518]   --->   Operation 110 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 111 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_4876_load, i64 %p_0_0_0278_3875" [SHA512CODE/sha512.cpp:518]   --->   Operation 111 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 112 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_3875_load, i64 %p_0_0_0278_2874" [SHA512CODE/sha512.cpp:518]   --->   Operation 112 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 113 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_2874_load, i64 %p_0_0_0278_1873" [SHA512CODE/sha512.cpp:518]   --->   Operation 113 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 114 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_1873_load, i64 %x_V_1" [SHA512CODE/sha512.cpp:518]   --->   Operation 114 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 115 [1/1] (0.38ns)   --->   "%store_ln518 = store i7 %add_ln886, i7 %t_V_1" [SHA512CODE/sha512.cpp:518]   --->   Operation 115 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 116 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %x_V_4, i64 %x_V_2" [SHA512CODE/sha512.cpp:518]   --->   Operation 116 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 117 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %p_0_0_0278_9880_load, i64 %empty" [SHA512CODE/sha512.cpp:518]   --->   Operation 117 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 118 [1/1] (0.38ns)   --->   "%store_ln518 = store i64 %Wt_V_load, i64 %x_V" [SHA512CODE/sha512.cpp:518]   --->   Operation 118 'store' 'store_ln518' <Predicate = (!icmp_ln1073)> <Delay = 0.38>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 123 'ret' 'ret_ln0' <Predicate = (icmp_ln1073)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.97>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%specpipeline_ln519 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [SHA512CODE/sha512.cpp:519]   --->   Operation 119 'specpipeline' 'specpipeline_ln519' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%specloopname_ln518 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [SHA512CODE/sha512.cpp:518]   --->   Operation 120 'specloopname' 'specloopname_ln518' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.97ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i64P0A, i64 %w_strm6, i64 %Wt_V_1" [/share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 121 'write' 'write_ln174' <Predicate = true> <Delay = 0.97> <CoreInst = "FIFO_LUTRAM">   --->   Core 80 'FIFO_LUTRAM' <Latency = 0> <II = 1> <Delay = 0.97> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 32> <FIFO>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln518 = br void %for.inc32" [SHA512CODE/sha512.cpp:518]   --->   Operation 122 'br' 'br_ln518' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 1.08ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation ('Wt.V') [34]  (0 ns)
	'store' operation ('store_ln492', SHA512CODE/sha512.cpp:492) of variable 'W_V_reload_read', SHA512CODE/sha512.cpp:492 on local variable 'Wt.V' [53]  (0.387 ns)

 <State 2>: 2.38ns
The critical path consists of the following:
	'load' operation ('x_V_load', SHA512CODE/sha512.cpp:518) on local variable 'x.V' [90]  (0 ns)
	'xor' operation ('ret.V') [104]  (0 ns)
	'add' operation ('add_ln232_1') [116]  (1.15 ns)
	'add' operation ('Wt.V') [117]  (0.843 ns)
	'store' operation ('store_ln518', SHA512CODE/sha512.cpp:518) of variable 'Wt.V' on local variable 'Wt.V' [120]  (0.387 ns)

 <State 3>: 0.977ns
The critical path consists of the following:
	fifo write operation ('write_ln174', /share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) on port 'w_strm6' (/share/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/hls_stream_39.h:174) [118]  (0.977 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
