// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="caesar_caesar,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.335000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2688,HLS_SYN_LUT=2436,HLS_VERSION=2022_1}" *)

module caesar (
        ap_clk,
        ap_rst_n,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst_n;
input  [583:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
output  [583:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;

 reg    ap_rst_n_inv;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_done;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_idle;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_ready;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_input_r_TREADY;
wire   [582:0] grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_din;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_write;
wire   [583:0] grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TDATA;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TVALID;
wire    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TREADY;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_done;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_idle;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_ready;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_copy_read;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TREADY;
wire   [583:0] grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TDATA;
wire    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TVALID;
reg    grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    copy_full_n;
reg    copy_write;
reg    grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [582:0] copy_dout;
wire    copy_empty_n;
reg    copy_read;
wire    ap_CS_fsm_state6;
reg   [6:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    regslice_both_output_r_U_apdone_blk;
wire    ap_CS_fsm_state7;
wire    regslice_both_input_r_U_apdone_blk;
wire   [583:0] input_r_TDATA_int_regslice;
wire    input_r_TVALID_int_regslice;
reg    input_r_TREADY_int_regslice;
wire    regslice_both_input_r_U_ack_in;
reg   [583:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg = 1'b0;
end

caesar_caesar_Pipeline_VITIS_LOOP_16_1 grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start),
    .ap_done(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_done),
    .ap_idle(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_idle),
    .ap_ready(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_ready),
    .input_r_TDATA(input_r_TDATA_int_regslice),
    .input_r_TVALID(input_r_TVALID_int_regslice),
    .input_r_TREADY(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_input_r_TREADY),
    .copy_din(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_din),
    .copy_full_n(copy_full_n),
    .copy_write(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_write),
    .output_r_TDATA(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TDATA),
    .output_r_TVALID(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TVALID),
    .output_r_TREADY(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TREADY)
);

caesar_caesar_Pipeline_VITIS_LOOP_39_3 grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start),
    .ap_done(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_done),
    .ap_idle(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_idle),
    .ap_ready(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_ready),
    .copy_dout(copy_dout),
    .copy_empty_n(copy_empty_n),
    .copy_read(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_copy_read),
    .output_r_TREADY(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TREADY),
    .output_r_TDATA(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TDATA),
    .output_r_TVALID(grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TVALID)
);

caesar_fifo_w583_d2_S copy_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_din),
    .if_full_n(copy_full_n),
    .if_write(copy_write),
    .if_dout(copy_dout),
    .if_empty_n(copy_empty_n),
    .if_read(copy_read)
);

caesar_regslice_both #(
    .DataWidth( 584 ))
regslice_both_input_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TDATA),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_U_ack_in),
    .data_out(input_r_TDATA_int_regslice),
    .vld_out(input_r_TVALID_int_regslice),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_U_apdone_blk)
);

caesar_regslice_both #(
    .DataWidth( 584 ))
regslice_both_output_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_ready == 1'b1)) begin
            grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg <= 1'b1;
        end else if ((grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_ready == 1'b1)) begin
            grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg <= 1'b0;
        end
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_output_r_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        copy_read = grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_copy_read;
    end else begin
        copy_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        copy_write = grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_copy_write;
    end else begin
        copy_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_TREADY_int_regslice = grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_input_r_TREADY;
    end else begin
        input_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        output_r_TDATA_int_regslice = grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TDATA;
    end else if (((grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        output_r_TDATA_int_regslice = grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TDATA;
    end else begin
        output_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_TVALID_int_regslice = grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TVALID;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_r_TVALID_int_regslice = grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TVALID;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (regslice_both_output_r_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start = grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_ap_start_reg;

assign grp_caesar_Pipeline_VITIS_LOOP_16_1_fu_50_output_r_TREADY = (output_r_TREADY_int_regslice & ap_CS_fsm_state3);

assign grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start = grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_ap_start_reg;

assign grp_caesar_Pipeline_VITIS_LOOP_39_3_fu_61_output_r_TREADY = (output_r_TREADY_int_regslice & ap_CS_fsm_state6);

assign input_r_TREADY = regslice_both_input_r_U_ack_in;

assign output_r_TVALID = regslice_both_output_r_U_vld_out;

endmodule //caesar
